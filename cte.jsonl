{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the leading parties in each AC for the survey round 1 for the state of andhra pradesh as per the vn score for election cycle AP_2024. The results should be given as per assembly constituency.", "output": "with sd_dm_pks as (SELECT sd_dm_pk, ac_no, ac_name\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi n on n.capi_fk = capi_pk\n                        where last_normalised_ae = true)\nselect ac_no,\n       ac_name,\n       future_vote_pref,\n       sum(raw)                                         as total_samples,\n       100* sum(vn) / sum(sum(vn)) over (partition by ac_no) as vote_share\nfrom survey_samples\ngroup by ac_no, ac_name, future_vote_pref\norder by ac_no, vote_share desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the seat calls for all assembly seats in the state of andhra pradesh for survey round 1 of the election cycle AP_2024 considering the vn score.", "output": "with sd_dm_pks as (SELECT sd_dm_pk, ac_no, ac_name\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi n on n.capi_fk = capi_pk\n                        where last_normalised_ae = true),\n     ac_wise_party_pref as (select ac_no,\n                                   ac_name,\n                                   future_vote_pref,\n                                   sum(raw)                                                     as total_samples,\n                                   100 * sum(vn) / sum(sum(vn)) over (partition by ac_no)       as vote_share,\n                                   row_number() over (partition by ac_no order by sum(vn) desc) as rank\n                            from survey_samples\n                            group by ac_no, ac_name, future_vote_pref)\nselect ac_no, ac_name, future_vote_pref as winner, vote_share\nfrom ac_wise_party_pref\nwhere rank = 1;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nList out the leading parties in each PC for the survey round 1 for the state of andhra pradesh as per the vn score for election cycle AP_2024 for PC number 1.", "output": "with sd_dm_pks as (SELECT sd_dm_pk, pc_no, pc_name\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi n on n.capi_fk = capi_pk\n                        where last_normalised_ae = true)\nselect pc_no,\n       pc_name,\n       future_vote_pref,\n       sum(raw) as total_samples,\n       100* sum(vn) / sum(sum(vn)) over (partition by pc_no) as vote_share\nfrom survey_samples\nwhere pc_no = 1\ngroup by pc_no, pc_name, future_vote_pref\norder by vote_share desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the vote preferences of all women overall for andhra pradesh for round 1 of the survey for the election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi n on n.capi_fk = capi_pk\n                                 LEFT JOIN demographic_section_capi dsc on dsc.capi_fk = capi_pk\n                        where last_normalised_ae = true\n                          and lower(gender) = 'female')\nselect \n       future_vote_pref,\n       sum(raw)                                               as total_samples,\n       100 * sum(vn) / sum(sum(vn)) over () as vote_share\nfrom survey_samples\ngroup by future_vote_pref\norder by vote_share desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the vote preferences of all first-time voters overall for andhra pradesh for round 1 of the survey for the election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi n on n.capi_fk = capi_pk\n                        where last_normalised_ae = true\n                          and lower(past_vote_pref) = 'first time voter')\nselect \n       future_vote_pref,\n       sum(raw)  as total_samples,\n       100 * sum(vn) / sum(sum(vn)) over () as vote_share\nfrom survey_samples\ngroup by future_vote_pref\norder by vote_share desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the vote preferences of all first time women voters overall for andhra pradesh for round 1 of the survey for the election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi n on n.capi_fk = capi_pk\n                                 LEFT JOIN demographic_section_capi dsc on dsc.capi_fk = capi_pk\n                        where last_normalised_ae = true\n                          and lower(past_vote_pref) = 'first time voter' and lower(gender) = 'female')\nselect \n       future_vote_pref,\n       sum(raw)                                               as total_samples,\n       100 * sum(vn) / sum(sum(vn)) over () as vote_share\nfrom survey_samples\ngroup by future_vote_pref\norder by vote_share desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), driving_factor_to_vote_capi(driving_factor_to_vote, capi_fk), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the percentage breakdown of the reasons to vote grouped zonewise for the state of andhra pradesh for round 1 of the survey for the election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN demographic_section_capi ds on ds.capi_fk = capi_pk\n                                 LEFT JOIN driving_factor_to_vote_capi df on df.capi_fk = capi_pk\n                                 left join normalisation_ac_table_capi natc on natc.capi_fk = capi_pk\n                       where last_normalised_ae = true)\nselect caste_category,\n       driving_factor_to_vote,\n       100* count(driving_factor_to_vote) / sum(count(driving_factor_to_vote)) over () as percentage\nfrom survey_samples\ngroup by caste_category, driving_factor_to_vote\norder by caste_category, percentage desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), incumbent_govt_satisfaction_capi(incumbent_govt_satisfaction, capi_fk), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the caste categorywise satisfaction with the government in power for the state of andhra pradesh for round 1 of the survey for election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN demographic_section_capi ds on ds.capi_fk = capi_pk\n                                 LEFT JOIN incumbent_govt_satisfaction_capi df on df.capi_fk = capi_pk\n                                 left join normalisation_ac_table_capi natc on natc.capi_fk = capi_pk\n                       where last_normalised_ae = true)\nselect caste_category,\n       incumbent_govt_satisfaction,\n       100* count(incumbent_govt_satisfaction) / sum(count(incumbent_govt_satisfaction)) over () as percentage\nfrom survey_samples\ngroup by caste_category, incumbent_govt_satisfaction\norder by caste_category, percentage desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), national_scheme_benefitted_capi(national_scheme_benefitted, capi_fk), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the breakup of those national schemes which voters have said most benefitted them in andhra pradesh for round 1 of the survey for election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN normalisation_ac_table_capi natc on natc.capi_fk = capi_pk\n                                 LEFT JOIN national_scheme_benefitted_capi ns on ns.capi_fk = capi_pk\n                       where last_normalised_ae = true)\nselect national_scheme_benefitted,\n       100* count(national_scheme_benefitted) / sum(count(national_scheme_benefitted)) over () as percentage\nfrom survey_samples\ngroup by national_scheme_benefitted \norder by percentage desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), national_scheme_benefitted_capi(national_scheme_benefitted, capi_fk), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the breakup of those national schemes which women voters have said most benefitted them in andhra pradesh for round 1 of the survey for election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n  LEFT JOIN normalisation_ac_table_capi natc on natc.capi_fk = capi_pk\n                                 LEFT JOIN demographic_section_capi ds on ds.capi_fk = capi_pk\n                                 LEFT JOIN national_scheme_benefitted_capi ns on ns.capi_fk = capi_pk\n                       where last_normalised_ae = true and lower(gender) = 'female')\nselect national_scheme_benefitted,\n       100* count(national_scheme_benefitted) / sum(count(national_scheme_benefitted)) over () as percentage\nfrom survey_samples group by national_scheme_benefitted group by national_scheme_benefitted\norder by percentage desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), national_scheme_benefitted_capi(national_scheme_benefitted, capi_fk), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the breakup of those national schemes SC voters have said most benefitted them in andhra pradesh for round 1 of the survey for election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\n                   from survey_desc_dimension_capi sddc\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\n                   where sddc.state_abb = 'AP'\n                     and election_cycle = 'AP_2024'\n                     and election_round = '1'),\n     capi_fks as (select *\n                  from capi_fact\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\n                  where doc_exists = true),\n     survey_samples as (select *\n                        from capi_fks\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\n                                 LEFT JOIN demographic_section_capi ds on ds.capi_fk = capi_pk\n                                 LEFT JOIN national_scheme_benefitted_capi ns on ns.capi_fk = capi_pk\n  LEFT JOIN normalisation_ac_table_capi natc on natc.capi_fk = capi_pk\n                       where last_normalised_ae = true and lower(caste_category) = 'sc')\nselect national_scheme_benefitted,\n       100* count(national_scheme_benefitted) / sum(count(national_scheme_benefitted)) over () as percentage\nfrom survey_samples group by national_scheme_benefitted\norder by percentage desc;"}
{"instruction": "Given the following schema:\nTables: ac_mappings(ac_mapping_pk, state_abb, ac_no, ac_name, pc_no, pc_name, district, zone), normalisation_ac_table_capi(capi_fk, raw, vn, vn_final, vn_ae, vn_agc, vn_agc_ae, vn_gc, vn_gc_ae, vn_c, vn_c_ae, vn_ge, vn_ae_ge, vn_raw_ae, vn_average, vn_average_ge, last_normalised_ae, last_normalised_ge, caste, vn_raw_ge), national_scheme_benefitted_capi(national_scheme_benefitted, capi_fk), demographic_section_capi(capi_fk, sub_caste, gender, age, caste_category, caste_original, sc_sub_caste, obc_sub_caste, gen_sub_caste, st_sub_caste, job_type, religion, mobile, highest_qualification), ae_section_capi(capi_fk, cand_pref_ques, cm_preference, cm_work_satisfaction, past_vote_pref, future_vote_pref, mla_work_satisfaction, ac_issues, ac_winner_preference, state_winner_preference, state_schemes_benefitted), survey_desc_dimension_capi(sd_dm_pk, state_abb, election_cycle, election_round, level, cons_no, status, reporting_round, ac_mapping_fk, audit_status, normalisation, recalibration_status), capi_fact(capi_pk, mongo_doc_id, respondent_unique_id, sd_dm_fk, doc_exists)\n\nGive me the breakup of those national schemes which ST voters have said most benefitted them in andhra pradesh for round 1 of the survey for election cycle AP_2024.", "output": "with sd_dm_pks as (SELECT sd_dm_pk\r\n                   from survey_desc_dimension_capi sddc\r\n                            inner join ac_mappings acm on sddc.ac_mapping_fk = acm.ac_mapping_pk\r\n                   where sddc.state_abb = 'AP'\r\n                     and election_cycle = 'AP_2024'\r\n                     and election_round = '1'),\r\n     capi_fks as (select *\r\n                  from capi_fact\r\n                           inner join sd_dm_pks on sd_dm_pks.sd_dm_pk = capi_fact.sd_dm_fk\r\n                  where doc_exists = true),\r\n     survey_samples as (select *\r\n                        from capi_fks\r\n                                 LEFT JOIN ae_section_capi ae on ae.capi_fk = capi_pk\r\n  LEFT JOIN normalisation_ac_table_capi natc on natc.capi_fk = capi_pk\r\n                                 LEFT JOIN demographic_section_capi ds on ds.capi_fk = capi_pk\r\n                                 LEFT JOIN national_scheme_benefitted_capi ns on ns.capi_fk = capi_pk\r\n                       where last_normalised_ae = true and lower(caste_category) = 'st')\r\nselect national_scheme_benefitted,\r\n       100* count(national_scheme_benefitted) / sum(count(national_scheme_benefitted)) over () as percentage\r\nfrom survey_samples group by national_scheme_benefitted \r\norder by percentage desc;"}